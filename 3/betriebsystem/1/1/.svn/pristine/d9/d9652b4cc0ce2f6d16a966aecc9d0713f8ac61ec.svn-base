#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <stdbool.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <unistd.h>
#include <sys/types.h>

off_t fileSize(int file)
{
	off_t start = lseek(file, 0, SEEK_SET);
	off_t end = lseek(file, 0, SEEK_END);

	lseek(file, 0, SEEK_SET);

	return (end - start);
}

void closeFile(int f1)
{
	if (close(f1) != 0)
	{
		perror("Datei konnte nicht geschlossen werden");
		exit(EXIT_FAILURE);
	}
}

int main(int argc, char *argv[])
{
	printf("Kopiere Datei rueckwaerts ...\n");

	if (argc != 3)
	{
		perror("die beiden Dateiname, muessen als Kommandozeilenparameter uebergeben werden");
		return EXIT_FAILURE;
	}


	char* inFilename = argv[1];
	char* outFilename = argv[2];

	int inFp = open(inFilename, O_RDONLY);

	if (inFp == -1)
	{
		perror("Eingabedatei konnte nicht gelesen werden");
		return EXIT_FAILURE;
	}

	int outFp = creat(outFilename, S_IRUSR | S_IWUSR);

	if (outFp == -1)
	{
		perror("Ausgabedatei konnte nicht gelesen werden");
		closeFile(inFp);
		return EXIT_FAILURE;
	}

	off_t inFileSize = fileSize(inFp);

	if (inFileSize > 0)
	{
		char inBuffer[inFileSize];

		ssize_t readInFp = read(inFp, inBuffer, inFileSize);

		if (readInFp != inFileSize)
		{
			perror("Nicht alles Bytes konnten gelesen werden");
			
			closeFile(inFp);
			closeFile(outFp);
			
			return EXIT_FAILURE;
		}

		ssize_t writeOutFp = write(outFp, inBuffer, inFileSize);

		if (writeOutFp != inFileSize)
		{
			perror("Nicht alle Bytes konnten geschrieben werden");

			closeFile(inFp);
			closeFile(outFp);

			return EXIT_FAILURE;
		}
	}

	closeFile(inFp);
	closeFile(outFp);

	return EXIT_SUCCESS;
}
