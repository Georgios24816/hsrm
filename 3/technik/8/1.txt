1)
a)
	1)	<<Subsystem>>:	(oben rechts) werden verwendet um Abstraktionen
						für umfangreiche Komponenten zu bilden.
	
	2)	<<extend>>:		der Pfeil zeigt auf den Kreis, der die Extension Points
						angibt
						
	3) 	Mit einer Erweiterungsbeziehung (Extend) hingegen lässt sich ausdrücken, 
		dass ein Anwendungsfall unter bestimmten Umständen und an einer bestimmten 
		Stelle (dem sog. Erweiterungspunkt, englisch extension point) durch einen
		anderen erweitert wird. Sie stellt eine optionale Beziehung dar und wird 
		deshalb oft als „Kannbeziehung“ bezeichnet.
	
	4) 	<<include>>:	ein Use-Case verwendet auch andere Use-Cases die in einem
						anderen Diagramm definiert sind.
b)
	1)	Vererbung kann mit einem Pfeil dargestellt werden. ------->
	
	2)	Multiplizität kann wie bei ER Diagrammen dargestellt werden.
	
	3)	Aktion werden in Ovalen mit einem Pfeil der zu Ihnen zeigt
		dargestellt. Aktion ist eine Aufgabe die der Benutzer 
		verwenden kann.
	
	4)	Aktivität: dazu verwendet man Aktivitätsdiagramme, die eingebettet werden
		können. Diese dienen als Abstraktionsschicht.
	
c)	1) rechteckiger Rahmen mit einem kleinen rechteckigen Rahmen oben links.
	
	2)	class hat kein Kürzel
		package -> pkg
		component -> cmp
		deployment -> dep
		use_case -> uc
		activity -> act
		state machine -> stm
		interaction -> sd