/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _HAMSTER_H_RPCGEN
#define _HAMSTER_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct hmstr_rpc_new_req {
	char owner_name[32];
	char hamster_name[32];
	uint16_t treats;
};
typedef struct hmstr_rpc_new_req hmstr_rpc_new_req;

struct hmstr_rpc_new_resp {
	int32_t uid;
};
typedef struct hmstr_rpc_new_resp hmstr_rpc_new_resp;

struct hmstr_rpc_lookup_req {
	char owner_name[32];
	char hamster_name[32];
};
typedef struct hmstr_rpc_lookup_req hmstr_rpc_lookup_req;

struct hmstr_rpc_lookup_resp {
	int32_t uid;
};
typedef struct hmstr_rpc_lookup_resp hmstr_rpc_lookup_resp;

struct hmstr_rpc_directory_req {
	int32_t fdptr;
	char *owner_name;
	char *hamster_name;
};
typedef struct hmstr_rpc_directory_req hmstr_rpc_directory_req;

struct hmstr_rpc_directory_resp {
	int32_t uid;
	int32_t fdptr;
};
typedef struct hmstr_rpc_directory_resp hmstr_rpc_directory_resp;

struct hmstr_rpc_howsdoing_req {
	int32_t ID;
	uint16_t treats_left;
	uint32_t rounds;
	int16_t cost;
};
typedef struct hmstr_rpc_howsdoing_req hmstr_rpc_howsdoing_req;

struct hmstr_rpc_howsdoing_resp {
	int32_t zero;
	uint16_t treats_left;
	uint32_t rounds;
	int16_t cost;
};
typedef struct hmstr_rpc_howsdoing_resp hmstr_rpc_howsdoing_resp;

struct hmstr_rpc_readentry_req {
	int32_t ID;
	char owner_name[32];
	char hamster_name[32];
	int16_t price;
};
typedef struct hmstr_rpc_readentry_req hmstr_rpc_readentry_req;

struct hmstr_rpc_readentry_resp {
	int32_t treats;
	char owner_name[32];
	char hamster_name[32];
	int16_t price;
};
typedef struct hmstr_rpc_readentry_resp hmstr_rpc_readentry_resp;

struct hmstr_rpc_givetreats_req {
	int32_t uid;
	uint16_t treats;
};
typedef struct hmstr_rpc_givetreats_req hmstr_rpc_givetreats_req;

struct hmstr_rpc_givetreats_resp {
	int32_t treats;
};
typedef struct hmstr_rpc_givetreats_resp hmstr_rpc_givetreats_resp;

struct hmstr_rpc_collect_req {
	char owner_name[32];
};
typedef struct hmstr_rpc_collect_req hmstr_rpc_collect_req;

struct hmstr_rpc_collect_resp {
	int32_t price;
};
typedef struct hmstr_rpc_collect_resp hmstr_rpc_collect_resp;

#define HMSTR_PROG 0x23451111
#define HMSTR_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define HMSTR_NEW 2
extern  hmstr_rpc_new_resp * hmstr_new_1(hmstr_rpc_new_req *, CLIENT *);
extern  hmstr_rpc_new_resp * hmstr_new_1_svc(hmstr_rpc_new_req *, struct svc_req *);
#define HMSTR_LOOKUP 3
extern  hmstr_rpc_lookup_resp * hmstr_lookup_1(hmstr_rpc_lookup_req *, CLIENT *);
extern  hmstr_rpc_lookup_resp * hmstr_lookup_1_svc(hmstr_rpc_lookup_req *, struct svc_req *);
#define HMSTR_DIRECTORY 4
extern  hmstr_rpc_directory_resp * hmstr_directory_1(hmstr_rpc_directory_req *, CLIENT *);
extern  hmstr_rpc_directory_resp * hmstr_directory_1_svc(hmstr_rpc_directory_req *, struct svc_req *);
#define HMSTR_HOWSDOING 5
extern  hmstr_rpc_howsdoing_resp * hmstr_howsdoing_1(hmstr_rpc_howsdoing_req *, CLIENT *);
extern  hmstr_rpc_howsdoing_resp * hmstr_howsdoing_1_svc(hmstr_rpc_howsdoing_req *, struct svc_req *);
#define HMSTR_READENTRY 6
extern  hmstr_rpc_readentry_resp * hmstr_readentry_1(hmstr_rpc_readentry_req *, CLIENT *);
extern  hmstr_rpc_readentry_resp * hmstr_readentry_1_svc(hmstr_rpc_readentry_req *, struct svc_req *);
#define HMSTR_GIVETREATS 7
extern  hmstr_rpc_givetreats_resp * hmstr_givetreats_1(hmstr_rpc_givetreats_req *, CLIENT *);
extern  hmstr_rpc_givetreats_resp * hmstr_givetreats_1_svc(hmstr_rpc_givetreats_req *, struct svc_req *);
#define HMSTR_COLLECT 8
extern  hmstr_rpc_collect_resp * hmstr_collect_1(hmstr_rpc_collect_req *, CLIENT *);
extern  hmstr_rpc_collect_resp * hmstr_collect_1_svc(hmstr_rpc_collect_req *, struct svc_req *);
extern int hmstr_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define HMSTR_NEW 2
extern  hmstr_rpc_new_resp * hmstr_new_1();
extern  hmstr_rpc_new_resp * hmstr_new_1_svc();
#define HMSTR_LOOKUP 3
extern  hmstr_rpc_lookup_resp * hmstr_lookup_1();
extern  hmstr_rpc_lookup_resp * hmstr_lookup_1_svc();
#define HMSTR_DIRECTORY 4
extern  hmstr_rpc_directory_resp * hmstr_directory_1();
extern  hmstr_rpc_directory_resp * hmstr_directory_1_svc();
#define HMSTR_HOWSDOING 5
extern  hmstr_rpc_howsdoing_resp * hmstr_howsdoing_1();
extern  hmstr_rpc_howsdoing_resp * hmstr_howsdoing_1_svc();
#define HMSTR_READENTRY 6
extern  hmstr_rpc_readentry_resp * hmstr_readentry_1();
extern  hmstr_rpc_readentry_resp * hmstr_readentry_1_svc();
#define HMSTR_GIVETREATS 7
extern  hmstr_rpc_givetreats_resp * hmstr_givetreats_1();
extern  hmstr_rpc_givetreats_resp * hmstr_givetreats_1_svc();
#define HMSTR_COLLECT 8
extern  hmstr_rpc_collect_resp * hmstr_collect_1();
extern  hmstr_rpc_collect_resp * hmstr_collect_1_svc();
extern int hmstr_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_hmstr_rpc_new_req (XDR *, hmstr_rpc_new_req*);
extern  bool_t xdr_hmstr_rpc_new_resp (XDR *, hmstr_rpc_new_resp*);
extern  bool_t xdr_hmstr_rpc_lookup_req (XDR *, hmstr_rpc_lookup_req*);
extern  bool_t xdr_hmstr_rpc_lookup_resp (XDR *, hmstr_rpc_lookup_resp*);
extern  bool_t xdr_hmstr_rpc_directory_req (XDR *, hmstr_rpc_directory_req*);
extern  bool_t xdr_hmstr_rpc_directory_resp (XDR *, hmstr_rpc_directory_resp*);
extern  bool_t xdr_hmstr_rpc_howsdoing_req (XDR *, hmstr_rpc_howsdoing_req*);
extern  bool_t xdr_hmstr_rpc_howsdoing_resp (XDR *, hmstr_rpc_howsdoing_resp*);
extern  bool_t xdr_hmstr_rpc_readentry_req (XDR *, hmstr_rpc_readentry_req*);
extern  bool_t xdr_hmstr_rpc_readentry_resp (XDR *, hmstr_rpc_readentry_resp*);
extern  bool_t xdr_hmstr_rpc_givetreats_req (XDR *, hmstr_rpc_givetreats_req*);
extern  bool_t xdr_hmstr_rpc_givetreats_resp (XDR *, hmstr_rpc_givetreats_resp*);
extern  bool_t xdr_hmstr_rpc_collect_req (XDR *, hmstr_rpc_collect_req*);
extern  bool_t xdr_hmstr_rpc_collect_resp (XDR *, hmstr_rpc_collect_resp*);

#else /* K&R C */
extern bool_t xdr_hmstr_rpc_new_req ();
extern bool_t xdr_hmstr_rpc_new_resp ();
extern bool_t xdr_hmstr_rpc_lookup_req ();
extern bool_t xdr_hmstr_rpc_lookup_resp ();
extern bool_t xdr_hmstr_rpc_directory_req ();
extern bool_t xdr_hmstr_rpc_directory_resp ();
extern bool_t xdr_hmstr_rpc_howsdoing_req ();
extern bool_t xdr_hmstr_rpc_howsdoing_resp ();
extern bool_t xdr_hmstr_rpc_readentry_req ();
extern bool_t xdr_hmstr_rpc_readentry_resp ();
extern bool_t xdr_hmstr_rpc_givetreats_req ();
extern bool_t xdr_hmstr_rpc_givetreats_resp ();
extern bool_t xdr_hmstr_rpc_collect_req ();
extern bool_t xdr_hmstr_rpc_collect_resp ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_HAMSTER_H_RPCGEN */
